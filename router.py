import json
import logging

import coloredlogs
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
import db_repo
import methods

router = Router()
coloredlogs.install(level="INFO")


@router.message(Command("start"))
async def start(m: Message):
    if db_repo.insert_user([str(m.from_user.id), str(m.from_user.username)]):
        await m.answer(text=f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é @{m.from_user.username} üëã"
                            f"\n–Ø –±–æ—Ç —Å–∫–∞–Ω–µ—Ä —á–µ–∫–æ–≤."
                            f"\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —á–µ–∫–∞ –∏ —è –µ–≥–æ —Å—á–∏—Ç–∞—é. üñº")
    else:
        logging.error("Problems on start")


@router.message(F.photo)
async def image(m: Message):
    file_id = m.photo[-1].file_id
    image_src = "images\\" + file_id + ".jpg"

    await m.bot.download(file_id, "D:\\PROJECTS\\cheque_scanner\\" + image_src)
    image_text = methods.image_to_text(image_src)
    qr_data = methods.get_qr_data(image_src)[0].data

    if qr_data is not None:
        json_data = json.dumps({"imageText": image_text})  # todo –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø–∞—Ä—Å–µ—Ä —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å–∞–π—Ç —Å —á–µ–∫–æ–º
        logging.info(f"–ß–µ–∫ {image_src} —Å—á–∏—Ç–∞–Ω: " + str(qr_data))
        db_repo.insert_cheque([str(m.from_user.id), json_data, qr_data])
        await m.answer(text="–ß–µ–∫ —Å—á–∏—Ç–∞–Ω: " + str(qr_data))
    else:
        await m.answer(text="–ß–µ–∫ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω")